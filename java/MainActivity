/*
 * Copyright (C) 2018 Adam Z Winter
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.example.android.datafrominternet;

import android.os.AsyncTask;
import android.os.Bundle;
import android.support.v7.app.AppCompatActivity;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.EditText;
import android.widget.ProgressBar;
import android.widget.TextView;

import com.example.android.datafrominternet.utilities.NetworkUtils;
import com.example.android.datafrominternet.utilities.TransactionComponents;

import java.io.IOException;
import java.net.URL;
import java.util.ArrayList;

public class MainActivity extends AppCompatActivity {

    private TextView mPostResultsTextView;
    private ProgressBar mPostingProgress;
    private EditText mInputMessage;
    TransactionComponents transactionComponents = new TransactionComponents();
    TransactionComponents globalObject = new TransactionComponents();


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        mPostResultsTextView = (TextView) findViewById(R.id.tv_post_results);
        mPostingProgress = (ProgressBar) findViewById(R.id.pb_post_progress);
        mInputMessage = (EditText) findViewById(R.id.et_input_message);
    }

    private void transmit() {
        String inputMessage = mInputMessage.getText().toString();
        transactionComponents.setMessage(inputMessage);
        new transmitPostTask().execute();
    }

    public class transmitPostTask extends AsyncTask<URL, Void, String> {
        @Override
        protected void onPreExecute() {
            super.onPreExecute();
            mPostingProgress.setVisibility(View.VISIBLE);
        }

        @Override
        protected String doInBackground(URL... params) {
//            URL searchUrl = params[0];
            String Results = null;
            try {
                Results = NetworkUtils.getResponseFromPost(transactionComponents);
            } catch (IOException e) {
                e.printStackTrace();
            }
            return Results;
        }

        @Override
        protected void onPostExecute(String PostResults) {
            mPostingProgress.setVisibility(View.INVISIBLE);
            if (PostResults != null && !PostResults.equals("")) {
                mPostResultsTextView.setText(PostResults);
                }
            if (PostResults == null || PostResults.equals("")) {
                    mPostResultsTextView.setText("Error: Results Empty or Null");
                }

        }
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        getMenuInflater().inflate(R.menu.main, menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        mPostResultsTextView.setText("");
        int itemThatWasClickedId = item.getItemId();
        if (itemThatWasClickedId == R.id.action_transmit) {
            transmit();
            return true;
        }
        return super.onOptionsItemSelected(item);
    }
}
